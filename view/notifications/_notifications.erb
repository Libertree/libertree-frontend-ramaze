<%
@set_keys.each do |key|
  notifications = @sets[key]
  notif = notifications[0]
  actor_array = notifications.map { |n| n.subject.member.name_display }
  actors = anded_list( actor_array.uniq )
  sg_or_pl = actor_array.uniq.length == 1 ? "singular" : "plural"

  case notif.subject
  when Libertree::Model::Comment
    partial = '_comment'
    avatar_member = notif.subject.member
    glimpse = notif.subject.post.glimpse
  when Libertree::Model::CommentLike
    partial = '_comment_like'
    avatar_member = notif.subject.member
    glimpse = notif.subject.comment.glimpse
  when Libertree::Model::Message
    partial = '_message'
    avatar_member = notif.subject.sender
    glimpse = notif.subject.glimpse
  when Libertree::Model::PoolPost
    partial = '_pool_post'
    avatar_member = notif.subject.pool.member
    glimpse = notif.subject.post.glimpse
  when Libertree::Model::PostLike
    partial = '_post_like'
    avatar_member = notif.subject.member
    glimpse = notif.subject.post.glimpse
  when Libertree::Model::Post
    partial = '_mention'
    avatar_member = notif.subject.member
    glimpse = notif.subject.glimpse
  end
%>

<% if notif.subject %>
  <%= render_file 'view/notifications/_notification_head.erb', notifications: notifications, avatar_member: avatar_member %>
  <%= render_partial partial, notifications: notifications, subject: notif.subject, actors: actors, sg_or_pl: sg_or_pl %>
  <%= render_file 'view/notifications/_notification_foot.erb', notifications: notifications, glimpse: glimpse %>
<% end %>

<% end %>
